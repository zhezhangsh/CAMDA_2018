PMCID: PMC1311911.
34: Subramanian A, Tamayo P, Mootha VK, Mukherjee S, Ebert BL, Gillette MA,
Paulovich A, Pomeroy SL, Golub TR, Lander ES, Mesirov JP. Gene set enrichment
analysis: a knowledge-based approach for interpreting genome-wide expression
profiles. Proc Natl Acad Sci U S A. 2005 Oct 25;102(43):15545-50. Epub 2005 Sep
30. PubMed PMID: 16199517; PubMed Central PMCID: PMC1239896.
"
x
x <- strsplit(x, '\n')
x
x <- x[[1]]
x
which(x=='')
which(x=='')->a
y <- a[1:length(a)]
z <- a[1:length(a)]-1
y
z
y <- y[-length(y)]
z <- z[-1]
a <- lapply(1:length(y), function(i) x[y[i]:z[i]])
a
a <- lapply(a, function(a) a[a!=''])
a
a <- a[sapply(a, length)>0]
a
length(a)
b <- lapply(a, function(a) paste(a, collapse=' '))
b
writeLines(b, '~/Desktop/ref.txt')
b
class(b)
b <- as.vector(b)
b
b <- unlist(b)
b
writeLines(b, '~/Desktop/ref.txt')
affy::rma
?affy::rma
?p.adjust
Benjamini, Y., and Hochberg, Y. (1995). Controlling the false discovery rate: a practical and powerful approach to multiple testing. Journal of the Royal Statistical Society Series B 57, 289â€“300.
x <- 'NK2
FolR1
Dbh
Brg1/Nkx2-5/Tbx5
Nkx2-5
Myc
Tbx5, Gata4, etc.
HDAC3'
x
x <- strsplit(x, '\n')
x
x <- x[[1]]
x <- strsplit(x, ', ')
x
x <- unlist(x)
x
x <- x[-9]
x <- strsplit(x, '/')
x
x <- unlist(x)
x
library("org.Mm.eg.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
sym <- x
x <- org.Mm.egSYMBOL
# Get the gene symbol that are mapped to an entrez gene identifiers
mapped_genes <- mappedkeys(x)
# Convert to a list
xx <- as.list(x[mapped_genes])
x <- unlist(xx)
head(x)
y <- x[x%in% sym]
y
setdiff(sym, y)
sym[1]
sym[1] <- 'Nk2'
y <- x[x%in% sym]
y
sym[1] <- 'Nkx2-1'
sym
sym[2] <- 'Folr1'
setdiff(sym, y = )
setdiff(sym, y )
sym
sym[4]
sym[4] <- 'Smarca4'
setdiff(sym, y )
sym[11] <- 'Hdac3'
sym
y <- x[x %in% sym]
y
length(y)
setdiff(sym, y)
length(sym)
id <- y
id
saveRDS(id, '/Users/zhangz/Documents/GM_R03/mage/goi.rds')
cor(t(d))
dim(d)
dir()
getwd()
source('http://bioconductor.org/biocLite.R')
biocLite('recount')
## Browse the vignetets for a quick description of how to use the package
library('recount')
browseVignettes('recount')
## Download the RangedSummarizedExperiment object at the gene level for
## study SRP009615
url <- download_study('SRP009615')
## View the url for the file by printing the object url
url
library('recount')
browseVignettes('recount')
## Download the RangedSummarizedExperiment object at the gene level for
## study SRP009615
url <- download_study('SRP009615')
## View the url for the file by printing the object url
url
url
library('recount')
browseVignettes('recount')
## Download the RangedSummarizedExperiment object at the gene level for
## study SRP009615
url <- download_study('SRP009615')
## View the url for the file by printing the object url
url
library('recount')
library("metaseqR", lib.loc="~/Library/R/3.2/library")
DEGandMore::DeMetaseqR
library(DEGandMore)
DeMethods()
21833.61+4555.46+9110.93+5500.00
x <- RoCA::ImportTable('~/Desktop/f')
x
file.rename('~/Desktop/f', '~/Desktop/f.txt')
x <- RoCA::ImportTable('~/Desktop/f.txt')
x <- readLines('~/Desktop/f.txt')
x
length(x)
x <- x[grep('-', x)]
x
length(x)
x <- x[grep('-H', x)]
x
length(x)
x <- readLines('~/Desktop/f.txt')
x <- x[grep('H', x)]
x
length(x)
x <- readLines('~/Desktop/f.txt')
x[-grep('H', x)]
x <- x[grep('H', x, ignore.case = TRUE)]
x
x[-grep('.txt$', x)]
x
x[-grep('.txt$', x)]
x[-grep('.txt$', x)]->x
x
x <- sapply(strsplit(x, ' '), function(x) rev(x)[1])
x
f0 <- f
f0 <- x
f1 <- paste(f0, '/', f0, '_1.fq.gz', sep='')
f1
f1 <- paste('/nas/is1/BGI/CPF1708003', f1, sep='/')
f1
f0
x <- strsplit(f0, '-')
x
sapply(x, length)
sapply(x, length)->n
x[n!=3]
x[n!=3][[1]]
x[n!=3][[1]] <- c('T', 'ND305', 'H3K4me3')
x[n!=3]
x[n!=3][[2]]
x[n!=3][[2]] <- c("T" , "ND388" , "H4ac")
a <- sapply(x, function(x) x[1])
b <- sapply(x, function(x) x[2])
c <- sapply(x, function(x) x[3])
a
table(a)
table(b)
table(c)
d <- toupper(c)
table(d)
f1[d=='H3KK4ME3']
d <- sub('KK', 'K', d)
table(d)
sub('H4', 'H3', d)->d
d
table(d)
sub('ME4', 'ME3', d)->d
d
sub('AC', 'ac', d)->d
table(d)
sub('ME', 'me', d)->d
table(d)
b
table(b)
b <- sub('ANNA', 'Anna', b)
table(b)
b[b=='Morga'] <- 'Morgan'
table(b)
b[b=='11944'] <- '11944A'
table(b)
b[b=='11944A'] <- '11944'
sub('A$', '', b)->b
b
table(b)
s <- data.frame(Cell=a, Subject=b, Target=d, stringsAsFactors = FALSE)
s
rownames(s) <- paste(s[[1]], s[[2]], s[[3]], sep='-')
f0
s
s$Original <- f0
s
s$File <- f1
s
s
x <- readLines('~/Desktop/x')
x
l1 <- x[1:4]
l1
f1
l0 <- l1
l0
l1 <- sapply(1:nrow(s), function(i) {l <- l0; l[2] <- s[i, 'File']; l[4] <- paste('/nas/is1/zhangz/projects/sullivan/2017-10_ChIPseq_Multi/novoalign/', rownames(s)[i], '.sam', sep=''); paste(l, collapse = ''); })
l1
f2 <- sapply(strsplit(l1, ' '), function(x) rev(x)[1])
f2
f3 <- sub('.sam$', '.bam', f2)
l2 <- paste('/mnt/isilon/cbmi/variome/bin/Samtools/0.1.19/samtools view -@ 16 -bS', f2, '>', f3)
l2[1]
f4 <- sub('.bam', '.sorted', f3)
f4
l2
l3
l3 <- paste('/mnt/isilon/cbmi/variome/bin/Samtools/0.1.19/samtools sort -@ 16', f3, f4)
l3[1]
l3
f5 <- sub('.sorted', '.sorted.bam', f4)
f5
l1
l2
l3
l4
l4 <- paste('/mnt/isilon/cbmi/variome/bin/Samtools/0.1.19/samtools index', f5)
lns <- paste(rep('######', 108), l1, '\n', l2, '\n', l3, '\n', l4, rep('\n\n', 108))
lns
lns <- paste(rep('######', 108), '\n', l1, '\n', l2, '\n', l3, '\n', l4, rep('\n\n', 108))
as.vector(lns)
lns <- cbind(rep('######', 108), '\n', l1, '\n', l2, '\n', l3, '\n', l4, rep('\n\n', 108))
as.vector(lns)
as.vector(t(lns))
as.vector(t(lns))->l
writeLines(l, '~/Desktop/align.sh')
lns <- cbind(paste(rep('######', 108), rownames(s)), l1, l2, l3, l4, rep('\n\n', 108))
as.vector(t(lns))->l
writeLines(l, '~/Desktop/align.sh')
/mnt/isilon/cbmi/variome/bin/Samtools/0.1.19/samtools
19/25
18/25
setwd('~/Documents/CAMDA/CMap/')
dir()
library(RoCA)
x <- ImportTable('CAMDA_Challange_dataset_filenames.xlsx')
x <- ImportTable('CAMDA_Challange_dataset_filenames.xlsx', rownames = FALSE)
dim(x)
x[1:2, ]
dim(x)
a <- x[-1, ]
dim(a)
head(a)
getwd()
dir()
setwd('R')
cel <- readRDS('CELs.rds')
cel <- readLines('CELs.rds')
cel[1:2]
saveRDS(cel, 'CELs.rds')
cel
nm <- sub('.CEL', '', cel)
nm
nm
dim(x)
head(x)
dim(x)
dim(a)
c1 <- a[, 4]
head(c1)
cel[1]
cel[grep('5500024030403071907255', cel)]
c1[grep('5500024030403071907255', c1)]
length(a)
cel[grep("'5500024030403071907255", cel)]
cel[grep('5500024030403071907255.C05', cel)]
cel[grep('5500024030403071907255.E03', cel)]
cel[grep('5500024030403071907255.C05', cel)]
a
head(a)
getwd()
setwd('../..')
dir()
setwd('NB')
dir()
url <- 'http://ala.boku.ac.at/camda2017/NB/'
XML::getHTMLLinks(url)
XML::getHTMLLinks(url)
library(rvest)
library(httr)
library(pbapply)
library(stringi)
filenames = getURL(url, ftp.use.epsv = FALSE, dirlistonly = TRUE)
filenames
?getURL
?XML::getHTMLLinks
require(rchive);
ln <- readLines('http://ala.boku.ac.at/camda2017/NB/')
args(readLines)
args(stdin)
?stdin
?getConnection
?args(readLines)
?readLines
dir()
ln <- readRDS('NB')
ln
ln <- readLines(NB)
ln <- readLines('NB')
ln
x <- rchive::CleanHtmlTags(lns)
x <- rchive::CleanHtmlTags(ln)
x
x <- x[-grep('Index', x)]
x
x <- x[-1]
x <- x[-length(x)]
x
x <- strsplit(x, ' ')
x <- sapply(x, function(x) x[1])
x
a <- x[grep('/$', x)]
a
b <- x[-grep('/$', x)]
b
f0 <- paste('http://ala.boku.ac.at/camda2017/NB', b, sep='/')
f0
a
f1 <- paste('http://ala.boku.ac.at/camda2017/NB', a, sep='/')
f1
l <- paste('wget', f1, '--password=Pivo --user=CAMDA')
l
writeLines(l, 'wget1')
f <- dir()
f
f <- f[grep('index.html', f)]
f
names(f) <- a
f
dir.create(sub('/', '', a))
c <- sub('/', '', a)
c
dir.create(c)
for (i in 1:length(c)) dir.create(c[i])
lns <- lapply(f, readLines)
lns <- lapply(lns, function(l) rchive::CleanHtmlTags(l))
lns[[1]]
lns <- lapply(lns, function(x) x[4:(length(x)-1)])
lns[[1]]
lns[[2]]
names(lns)
f1 <- lapply(lns, function(x) sapply(strsplit(x, ' '), function(x) x[1]))
f1
names(f1)
f <- f1
f1 <- as.vector(unlist(f))
head(f1)
head(a)
f <- f1
f1 <- paste(rep(names(a), sapply(a, length)), f)
head(f1)
f1 <- lapply(lns, function(x) sapply(strsplit(x, ' '), function(x) x[1]))
f <- f1
f1 <- unlist(f)
f1 <- paste(rep(names(f), sapply(f, length)), f1, sep='/')
f1
f1 <- sub('//', '/', f1)
f1
f0
fns <- data.frame(URL=f0, File=awsomics::TrimPath(f0))
fns
head(f1)
head(fns)
head(f)
head(f1)
length(f)
head(a)
names(a)
a
head(c)
x <- rep(c, sapply(f, length))
head(x)
y <- paste(x, f1, sep='/')
head(y)
head(fns)
z <- paste('http://ala.boku.ac.at/camda2017/NB', y, sep='/')
head(z)
url.exists(z[1])
y[1]
head(x)
names(f1)
names(f)
x <- paste(rep(names(f), sapply(f, length)), f1, sep='')
head(x)
f1[1]
length(f1)
x <- paste('http://ala.boku.ac.at/camda2017/NB', f1, sep='/')
url.exists(x[1])
head(x)
y <- data.frame(x, f1)
colnames(y) <- colnames(fns)
head(y)
fns <- rbind(fns, y)
x <- fns[grep('/$', fns[, 2]), ]
x
l <- readLines('aCGH_105k_GSE45478')
l <- rchive::CleanHtmlTags(l)
l
l[1:4]
l <- l[4:(length(l)-1)]
l
l <- sapply(strsplit(l, ' '), function(x) x[1])
l
x
y <- paste(x[1,1], l, sep='')
z <- paste(x[1,2], l, sep='')
head(y)
head(z)
a <- cbind(y, z)
colnames(a) <- colnames(fns)
dir.create('aCGH_GSE45480/aCGH_105k_GSE45478')
fns <- rbind(fns, a)
dim(fns)
x
l <- readLines('aCGH_44k_GSE45476')
l <- rchive::CleanHtmlTags(l)
l
l <- l[4:82]
l
l <- sapply(strsplit(l, ' '), function(x) x[1])
l
x
y <- paste(x[2,1], l, sep='')
y
z <- paste(x[2,2], l, sep='')
z
a <- cbind(y, z)
colnames(a) <- colnames(fns)
fns <- rbind(fns, a)
fns
fns[1:2, ]
dim(fns)
x <- fns[grep('/$', x[, 2]), ]
x
x <- fns[grep('/$', fns[, 2]), ]
x
x <- fns[-grep('/$', fns[, 2]), ]
dim(x)
saveRDS(x, 'download.rds')
saveRDS(x, 'downloads.rds')
?download.file
download.file(x[1,1], x[1,2])
download.file(x[1,2], x[1,1])
dim(x)
x[[1]] <- as.vector(x[[1]])
x[[2]] <- as.vector(x[[2]])
saveRDS(x, 'downloads.rds')
download.file(x[1,2], x[1,1])
x[1,1]
download.file(x[1,1], x[1,2])
for (i in 1:nrow(x)) {print(i); download.file(x[i, 1], x[i, 2]); }
dir('aCGH_GSE45480/aCGH_44k_GSE45476')
file.exists('aCGH_GSE45480/aCGH_44k_GSE45476')
dir.create('aCGH_GSE45480/aCGH_44k_GSE45476')
for (i in 1:nrow(x)) {print(i); if (!file.exists(x[i, 2])) download.file(x[i, 1], x[i, 2]); }
f0 <- dir(recursive = TRUE)
length(f0)
dim(x)
setdiff(f0, x[, 2])
setdiff(x[, 2], f0)
d <- readRDS('downloads.rds')
d
head(x)
head(d)
d[1:2, ]
l <- paste('wget', d[[1]], '-O', d[[2]])
l
l <- paste('wget', d[[1]], '-O', d[[2]], '--password=Pivo --user=CAMDA')
l
x <- d[[2]]
x
x <- strsplit(x, '/')
x <- sapply(x, function(x) paste(x[-length(x)], collapse='/'))
x
x <- unique(x)
x
x <- x[x!='']
dir.create(x, recursive = TRUE)
for (i in 1:length(x)) dir.create(x[i], recursive = TRUE)
l
writeLines(l, 'download.sh')
