fn <- paste('PCA/GSE49710_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[, nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
lns <- paste(paste('###', cnm), '\n\n',
paste('![](', fns, ')', sep=''), '\n\n', collapse='');
e1 <- readRDS('../../R/expression/GSE49711/expr_gene.rds')[, rownames(cl)];
f <- dir("PCA");
f
f <- dir("PCA");
f <- f[grep('GSE49710', f)];
f
cnm
cnv <- readRDS('../../R/aCGH/cnv_all.rds')
names(cnv)
head(cnv[[1]])
names(cnv)
gse <- sapply(strsplit(names(cnv), '_'), function(x) x[1]);
gse
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames))
tid
cnv <- readRDS('../../R/aCGH/cnv_all.rds');
gse <- sapply(strsplit(names(cnv), '_'), function(x) x[1]);
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
str(tid)
table(gse)
names(tid)
names(tid) <- unique(gse);
names(tid)
methods()
?methods
do.call('draw.quad.venn', tid)
require(VennDiagram);
do.call('draw.quad.venn', tid)
ind1 <- combn(1:4, 2);
ind1
ind1 <- t(combn(1:4, 2));
ind1
ind1 <- t(combn(1:4, 2));
ind1
ind1 <- lapply(1:nrow(ind1), function(i) ind1[i, ]);
ind1
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
num1
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num2
x <- unlist(tid)
table(x)
sort(table(x))
num3 <- length(Reduce('intersect', tid));
num3
cnv <- readRDS('../../R/aCGH/cnv_all.rds');
gse <- sapply(strsplit(names(cnv), '_'), function(x) x[1]);
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num3 <- length(Reduce('intersect', tid));
num <- c(num0, num1, num2, num3);
do.call('draw.quad.venn', num);
do.call('draw.quad.venn', as.list(num));
do.call('draw.quad.venn', as.list(num));
do.call('draw.quad.venn', as.list(num), category=unique(gse));
do.call('draw.quad.venn', c(num, category=unique(gse)));
do.call('draw.quad.venn', append(num, category=unique(gse)));
par <- as.list(c(num0, num1, num2, num3));
par$category <- unique(gse);
do.call('draw.quad.venn', par);
par <- as.list(c(num0, num1, num2, num3));
par$category <- unique(gse);
par$col <- rainbow(length(unique(gse)));
do.call('draw.quad.venn', par)
par <- as.list(c(num0, num1, num2, num3));
par$category <- unique(gse);
par$fill <- rainbow(length(unique(gse)));
do.call('draw.quad.venn', par);
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
plt
length(unique(plt))
table(plt)
plt[plt=='GPL16865'] <- 'GPL2897';
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num3 <- length(Reduce('intersect', tid));
par(mfrow=c(1, 2));
par1 <- as.list(c(num0, num1, num2, num3));
par1$category <- unique(gse);
par1$fill <- rainbow(length(unique(gse)));
do.call('draw.quad.venn', par1);
do.call('draw.quad.venn', par1);
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num3 <- length(Reduce('intersect', tid));
par(mfrow=c(1, 2));
par1 <- as.list(c(num0, num1, num2, num3));
par1$category <- unique(gse);
par1$fill <- rainbow(length(unique(gse)));
do.call('draw.quad.venn', par1);
do.call('draw.quad.venn', par1);
quartz()
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num3 <- length(Reduce('intersect', tid));
par(mfrow=c(1, 2));
par1 <- as.list(c(num0, num1, num2, num3));
par1$category <- unique(gse);
par1$fill <- rainbow(length(unique(gse)));
do.call('draw.quad.venn', par1);
do.call('draw.quad.venn', par1);
tid <- lapply(unique(plt), function(g) lapply(cnv[plt==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
num0
cnv <- readRDS('../../R/aCGH/cnv_all.rds');
gse <- sapply(strsplit(names(cnv), '_'), function(x) x[1]);
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
plt[plt=='GPL16865'] <- 'GPL2897';
unique(plt)
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
length(plt)
length(unique(plt))
unique(plt)
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
plt[plt=='GPL16865'] <- 'GPL2897';
table(plt)
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
unique(plt)
cnv <- readRDS('../../R/aCGH/cnv_all.rds');
gse <- sapply(strsplit(names(cnv), '_'), function(x) x[1]);
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
plt[plt=='GPL16865'] <- 'GPL2879';
unique(plt)
tid <- lapply(unique(gse), function(g) lapply(cnv[gse==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
num0
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num3 <- length(Reduce('intersect', tid));
tid <- lapply(unique(plt), function(g) lapply(cnv[plt==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
num0
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
num1
num0
ind2 <- lapply(4:1, function(i) (1:4)[-i]);
num2 <- sapply(ind2, function(i) length(Reduce('intersect', tid[i])));
num2
num3 <- length(Reduce('intersect', tid));
str(tid)
x <- sort(table(unlist(tid)))
x
tid <- lapply(unique(plt), function(g) lapply(cnv[plt==g], colnames));
tid <- lapply(tid, unlist);
tid <- lapply(tid, as.vector);
num0 <- sapply(tid, length);
ind1 <- t(combn(1:4, 2));
num1 <- apply(ind1, 1, function(i) length(Reduce('intersect', tid[i])));
num1
str(tid)
sapply(tid, length)
sum(sapply(tid, length))
intersect(tid[[1]], tid[[3]])
intersect(tid[[1]], tid[[2]])
intersect(tid[[1]], tid[[4]])
intersect(tid[[1]], tid[[4]])
intersect(tid[[2]], tid[[4]])
intersect(tid[[3]], tid[[4]])
str(tid)
length(unique(unlist(tid)))
length(unlist(tid))
intersect(tid[[1]], tid[[3]])
tid[[1]]
tid[[3]]
x <- tid[[1]]
y <- tid[[3]]
x
intersect(x, y)
z <- c(x, y)
length(z)
length(unique(z))
sort(z)
gse
plt
x <- rep(gse, sapply(gse, colnames));
names(cnv)
length(gse)
length(plt)
x <- rep(gse, lapply(gse, ncol));
x <- rep(gse, lapply(cnv, ncol));
x <- rep(gse, lapply(cnv, ncol));
y <- rep(plt, lapply(cnv, ncol));
xtabs(~x+y)
z <- xtabs(~x+y);
x <- rep(gse, lapply(cnv, ncol));
y <- rep(plt, lapply(cnv, ncol));
z <- xtabs(~x+y);
z <- as.matrix(z);
z
n <- sapply(cnv, ncol)
n
sort(n)
x <- ImportTable('../../R/aCGH/cnv_meta.csv')
dim(x)
head(x)
x <- ImportTable('../../R/aCGH/cnv_meta.xlsx')
x
x <- ImportTable('../../R/aCGH/cnv_meta.csv', colnames = TRUE)
x
dim(x)
head(x)
colnames(x) <- strsplit('Series	Platform	N_Region	N_Tumor	Microarray', '\t')[[1]]
strsplit('Series	Platform	N_Region	N_Tumor	Microarray', '\t')[[1]]
strsplit('Series	Platform	N_Region	N_Tumor	Microarray', '\t')[[1]]->y
x
dim(x)
head(x)
x <- read.csv2('../../R/aCGH/cnv_meta.csv')
dim(x)
head(x)
ImportTable('../../R/aCGH/cnv_meta.xlsx')
ImportTable('../../R/aCGH/cnv_meta.xlsx', rownames=FALSE)
ImportTable('../../R/aCGH/cnv_meta.xlsx', rownames=FALSE)->x
x
dim(x)
saveRDS(x, '../../R/aCGH/cnv_meta.rds')
m <- readRDS('../../R/aCGH/cnv_meta.rds');
m
args(kable)
cnv <- readRDS('../../R/aCGH/cnv_all.rds');
gse <- sapply(strsplit(names(cnv), '_'), function(x) x[1]);
plt <- sapply(strsplit(names(cnv), '_'), function(x) x[2]);
plt[plt=='GPL16865'] <- 'GPL2879';
x <- rep(gse, lapply(cnv, ncol));
y <- rep(plt, lapply(cnv, ncol));
z <- xtabs(~x+y);
z <- as.matrix(z);
m <- readRDS('../../R/aCGH/cnv_meta.rds');
n <- sapply(cnv, ncol)
n
sort(n)
x <- cnv[['GSE45480_GPL4093']]
dim(x)
pr <- prcomp(t(x))
c <- cl[colnames(x), ]
dim(c)
PlotPCA(pr, c[, 1])
PlotPCA(pr, c[, 2])
PlotPCA(pr, c[, 3])
dim(c)
head(c)
table(c[, 1])
table(c[, 2])
table(c[,3 ])
table(c[, 4])
PlotPCA(pr, c[, 4])
table(c[, 4])
PlotPCA(pr, c[, 4])
PlotPCA(pr, c[, 5])
PlotPCA(pr, c[, 6])
hist(x[, 1])
hist(x[, 1], ylim=c(0, 1000))
hist(x[, 1], ylim=c(0, 200))
n
sort(n)
c1 <- cnv[['GSE45480_GPL4093']];
pr <- prcomp(t(e3));
c1 <- cnv[['GSE45480_GPL4093']];
pr <- prcomp(t(c1));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE45480_GPL4093_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c1), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
dim(c1)
summary(c1[, 1])
summary(c1[, 1])
length(c1[c1>1])
length(c1)
length(c1[c1>1])/length(c1)
mx <- apply(c1, 1, max);
summary(mx)
mx <- apply(abs(c1), 1, max);
summary(mx)
length(mx[mx>1])
c1 <- cnv[['GSE45480_GPL4093']];
mx <- apply(abs(c1), 1, max);
pr <- prcomp(t(c1[mx>0.5, ]));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE45480_GPL4093_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c1), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
length(mx[mx>.5])
c1 <- cnv[['GSE45480_GPL4093']];
mx <- apply(abs(c1), 1, max);
pr <- prcomp(t(c1[mx>1, ]));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE45480_GPL4093_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c1), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
x <- apply(abs(c1), 2, function(x) length(x[x>1.5]))
x
sort(x)
x <- unlist(lapply(cnv, as.vector))
length(x)
hist(x)
hist(x, log='y')
hist(x)
hist(x, ylim=c(0, 1000))
hist(x, ylim=c(0, 10000))
sort(n)
c2 <- cnv[['GSE45480_GPL2873']];
pr <- prcomp(t(c2));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE45480_GPL2873_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c1), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
c2 <- cnv[['GSE45480_GPL2873']];
pr <- prcomp(t(c2));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE45480_GPL2873_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c2), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
sort(n)
c3 <- cnv[['GSE25771_GPL2873']];
pr <- prcomp(t(c3));
c3 <- cnv[['GSE25771_GPL2873']];
dim(c3)
pr <- prcomp(t(c3));
x <- apply(c3, 1, function(x) length(x[!is.na(x)]))
table(x)
pr <- prcomp(t(c3[!is.na(rowMeans(c3)), ]));
c3 <- cnv[['GSE25771_GPL2873']];
pr <- prcomp(t(c3[!is.na(rowMeans(c3)), ]));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE25771_GPL2873_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c2), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
c3 <- cnv[['GSE25771_GPL2873']];
pr <- prcomp(t(c3[!is.na(rowMeans(c3)), ]));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE25771_GPL2873_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c3), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
c3 <- cnv[['GSE25771_GPL2873']];
pr <- prcomp(t(c3[!is.na(rowMeans(c3)), ]));
fns <- sapply(cnm, function(nm) {
print(nm);
fn <- paste('PCA/GSE25771_GPL2873_', gsub('[ /]', '', nm), '.png', sep='');
png(fn, w=1200, h=900);
cex <- 2.5;
c <- cl[colnames(c3), nm];
c[is.na(c) | c==''] <- 'Not available';
col <- rainbow(length(unique(c)));
col[col=='#FFFF00FF'] <- '#EEEE00FF';
col <- sub('FF$', 'DD', col);
names(col) <- unique(c);
col <- col[as.character(c)];
PlotPCA(pr, groups=c, new.window = FALSE, cex=cex, col=col, legend=TRUE);
if (dev.cur()!=1) dev.off();
fn;
});
cnt <- lapply(cnv, function(c) table(round(as.vector(c), 2)));
cnt[[1]]
str(cnt)
x <- cnt[[1]]
plot(as.numeric(names(x)), x, type='b')
plot(as.numeric(names(x)), x, type='l')
plot(as.numeric(names(x)), x, type='h')
plot(as.numeric(names(x)), x, type='h', log='y')
plot(as.numeric(names(x)), as.integer(x), type='h', log='y', )
plot(as.numeric(names(x)), as.integer(x), type='h', log='y', col='grey')
plot(as.numeric(names(x)), as.integer(x), type='h', log='y', col='#88888888')
length(cnv)
cnt <- lapply(cnv, function(c) table(round(as.vector(c), 1)));
x <- cnt[[1]]
plot(as.numeric(names(x)), as.integer(x), type='h', log='y', col='#88888888')
cnt <- lapply(cnv, function(c) table(round(as.vector(c), 1)));
par(mfrow=c(2, 5), mar=c(5,5,3,2));
for (i in 1:length(cnt)) {
x <- cnt[[i]];
plot(as.numeric(names(x)), as.integer(x), type='h', log='y', col='#88888888',
xlab="CNV value", ylab="Number of calls", main=names(cnt)[i]);
};
